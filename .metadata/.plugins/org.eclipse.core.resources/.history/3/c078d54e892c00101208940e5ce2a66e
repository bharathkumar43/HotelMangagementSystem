package com.excelr.controller;

import com.excelr.model.User;
import com.excelr.repo.UserRepo;
import com.excelr.util.JwtUtil;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.*;

@RestController
@CrossOrigin(origins = "http://localhost:5173")
@RequestMapping
public class UserController {

    @Autowired
    private UserRepo userRepo;

    @Autowired
    private JwtUtil jwtUtil;

    private BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    // Login Endpoint
    @PostMapping("/login")
    public ResponseEntity<Map<String, String>> login(@RequestBody Map<String, String> loginData) {
        String username = loginData.get("username");
        String password = loginData.get("password");

        Optional<User> user = userRepo.findByUsername(username);

        if (user.isPresent() && passwordEncoder.matches(password, user.get().getPassword())) {
            Map<String, String> response = new HashMap<>();
            String token = jwtUtil.generateToken(username);

            response.put("login", "success");
            response.put("token", token);
            response.put("role", user.get().getRole());
            response.put("username", user.get().getUsername());
            response.put("id", String.valueOf(user.get().getId()));

            return ResponseEntity.ok(response);
        } else {
            Map<String, String> response1 = new HashMap<>();
            response1.put("login", "fail");
            return ResponseEntity.status(401).body(response1);
        }
    }
    
}
